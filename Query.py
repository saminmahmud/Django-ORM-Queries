# Django ORM-এ বিভিন্ন ধরনের কোয়েরি মেথড রয়েছে যা ডেটাবেসের সাথে ইন্টারঅ্যাক্ট করতে ব্যবহৃত হয়। এখানে কিছু প্রধান Django ORM কোয়েরি মেথডের তালিকা দেওয়া হলো:


# ১. মূল কোয়েরি মেথড
all(): সমস্ত রেকর্ড নিয়ে আসে।
filter(**kwargs): নির্দিষ্ট শর্তের ভিত্তিতে রেকর্ড ফিল্টার করে।
exclude(**kwargs): নির্দিষ্ট শর্তের ভিত্তিতে রেকর্ড বাদ দেয়।
get(**kwargs): একটি নির্দিষ্ট শর্ত অনুযায়ী একটি একক রেকর্ড ফেরত দেয় (যদি না থাকে তাহলে DoesNotExist ত্রুটি দেয়)।
create(**kwargs): নতুন রেকর্ড তৈরি করে এবং সেভ করে।
update(**kwargs): নির্বাচিত রেকর্ড আপডেট করে।
delete(): নির্বাচিত রেকর্ড মুছে ফেলে।


# ২. ডেটা নির্বাচন এবং আউটপুট
values(*fields): নির্দিষ্ট ক্ষেত্রের মান ডিকশনারি আকারে ফেরত দেয়।
values_list(*fields, flat=False): নির্দিষ্ট ক্ষেত্রের মান টিউপল বা তালিকা আকারে ফেরত দেয়।
order_by(*field_names): রেকর্ডগুলি নির্দিষ্ট ক্ষেত্রের উপর ভিত্তি করে সাজায়।


# ৩. উপসংহার এবং গ্রুপিং
aggregate(**kwargs): একটি বা একাধিক পরিসংখ্যান বের করে (যেমন গড়, সংখ্যা, ইত্যাদি)।
annotate(**kwargs): প্রতিটি রেকর্ডের সাথে নতুন ক্ষেত্র যোগ করে যা গণনা বা সমষ্টি।
distinct(): আলাদা রেকর্ড ফেরত দেয়।


# ৪. সম্পর্কিত ডেটার জন্য
select_related(*fields): একক SQL JOIN ব্যবহার করে সম্পর্কিত মডেলগুলিকে একসাথে লোড করে।
prefetch_related(*fields): আলাদা কোয়েরি তৈরি করে এবং সম্পর্কিত ডেটা লোড করে।
subquery: একটি কোয়েরির ফলাফলকে অন্য কোয়েরিতে ব্যবহার করার জন্য।


# ৫. টেবিলের পরিবর্তন
bulk_create(objs, batch_size=None): একাধিক রেকর্ড একসাথে তৈরি করে।
bulk_update(objs, fields): একাধিক রেকর্ড একসাথে আপডেট করে।


# ৬. অতিরিক্ত মেথড
first(): প্রথম রেকর্ড ফেরত দেয়।
last(): শেষ রেকর্ড ফেরত দেয়।
count(): মোট রেকর্ডের সংখ্যা ফেরত দেয়।
exists(): নির্বাচিত কোয়েরির ফলাফল থাকলে True ফেরত দেয়।
iterator(): রেকর্ডগুলো একটি লুপের মাধ্যমে পেতে সাহায্য করে, মেমরি ব্যবহারের জন্য কার্যকর।


# ৭. ফিল্টারিংয়ের জন্য এক্সপ্রেশন
Q(): জটিল শর্তের জন্য (যেমন OR, AND) ব্যবহার করা হয়।
F(): একই মডেলের ক্ষেত্রগুলোর মধ্যে তুলনা করার জন্য ব্যবহার করা হয়।